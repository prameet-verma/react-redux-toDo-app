{"version":3,"sources":["components/Todo.js","actions/index.js","App.js","reportWebVitals.js","reducer/toDoReducer.js","reducer/index.js","store.js","index.js"],"names":["Todo","useState","inputData","setInputData","dispatch","useDispatch","list","useSelector","state","toDoReducer","className","type","placeholder","value","onChange","event","target","onClick","data","payload","id","Date","getTime","toString","map","ele","title","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialData","action","newList","filter","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAgDeA,MA1Cf,WACI,MAAiCC,mBAAS,IAA1C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAWC,cACXC,EAAMC,aAAY,SAACC,GAAD,OAAUA,EAAMC,YAAYH,QACpD,OACI,mCACA,qBAAKI,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACE,iCACE,4EAEF,sBAAKA,UAAU,WAAf,UACI,uBAAOC,KAAK,OAAOC,YAAY,gCAC7BC,MAAOX,EACPY,SAAU,SAACC,GAAD,OAAUZ,EAAaY,EAAMC,OAAOH,UAEhD,mBAAGH,UAAU,qBACXO,QAAS,kBAAKb,GCvBXc,EDuB4BhB,ECtBzC,CACFS,KAAM,WACNQ,QAAQ,CACJC,IAAI,IAAIC,MAAOC,UAAUC,WACzBL,KAAKA,KDkB8Cf,EAAa,KCvBtD,IAACe,QD0BT,qBAAKR,UAAU,YAAf,SAEQJ,EAAKkB,KAAI,SAACC,GACN,OACE,sBAAKf,UAAU,WAAf,UACA,6BAAKe,EAAIP,OACT,mBAAGR,UAAU,2BAA6BgB,MAAM,cACpDT,QAAS,kBAAKb,ECtB5B,CACFO,KAAM,cACNS,GDoBkDK,EAAIL,UAHHK,EAAIL,iBElBhDO,MATf,WACE,OACE,mCACI,cAAC,EAAD,OCMOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,sBCPRQ,EAAY,CACd/B,KAAK,IA2BMG,EAzBG,WAA6B,IAA5BD,EAA2B,uDAArB6B,EAAYC,EAAS,uCAE1C,OAAOA,EAAO3B,MACV,IAAK,WACD,MAAkB2B,EAAOnB,QAAlBC,EAAP,EAAOA,GAAIF,EAAX,EAAWA,KACX,kCACOV,GADP,IAEIF,KAAK,GAAD,mBACGE,EAAMF,MADT,CAEA,CACIc,GAAGA,EACHF,KAAKA,OAKjB,IAAK,cACD,IAAMqB,EAAS/B,EAAMF,KAAKkC,QAAO,SAACf,GAAD,OAAQA,EAAIL,KAAOkB,EAAOlB,MAC3D,kCACOZ,GADP,IAEIF,KAAMiC,IAElB,QAAS,OAAO/B,IClBTiC,EAJIC,YAAgB,CAC/BjC,gBCEWkC,EAFFC,YAAYH,GCIzBI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACA,cAAC,EAAD,QAIFK,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.2a5b1141.chunk.js","sourcesContent":["import React,{useState, useEffect} from 'react'\r\nimport \"./Todo.css\"\r\nimport {addItem, deleteItem, removeItem} from \"../actions/index\"\r\nimport {useSelector,useDispatch} from \"react-redux\"\r\nimport \"./Todo.css\"\r\n\r\nfunction Todo() {\r\n    const [inputData, setInputData]= useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const list= useSelector((state)=> state.toDoReducer.list);\r\n    return (\r\n        <>\r\n        <div className=\"main-div\">\r\n            <div className=\"child-div\">\r\n              <figure>\r\n                <figcaption> Add Your LIST Here‚úåÔ∏è </figcaption>\r\n              </figure>\r\n              <div className=\"addItems\">\r\n                  <input type=\"text\" placeholder=\"Add items..‚úçüèª\" \r\n                    value={inputData}\r\n                    onChange={(event)=> setInputData(event.target.value)}\r\n                  />\r\n                  <i className=\"fa fa-plus add-btn\"  \r\n                    onClick={()=> dispatch(addItem(inputData), setInputData(''))}                  \r\n                  ></i>\r\n              </div>\r\n              <div className=\"showItems\">\r\n                  {\r\n                      list.map((ele)=>{\r\n                          return(\r\n                            <div className=\"eachItem\" key={ele.id}>\r\n                            <h3>{ele.data}</h3>\r\n                            <i className=\"far fa-trash-alt add-btn\"   title=\"Delete Item\"\r\n                        onClick={()=> dispatch(deleteItem(ele.id))}                  \r\n                      ></i>\r\n                        </div>\r\n                          )\r\n                        \r\n                      })\r\n                  }\r\n                    \r\n              </div>\r\n            </div>\r\n        </div>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","export const addItem= (data)=>{\r\n    return{\r\n        type: \"ADD-ITEM\",\r\n        payload:{\r\n            id: new Date().getTime().toString(),\r\n            data:data\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteItem= (id)=>{\r\n    return{\r\n        type: \"DELETE-ITEM\",\r\n        id\r\n    }\r\n}\r\nexport const removeItem= ()=>{\r\n    return{\r\n        type: \"REMOVE-ALL\"\r\n    }\r\n}","import React from 'react'\nimport Todo from \"./components/Todo\"\n \nfunction App() {\n  return (\n    <>\n        <Todo/>\n\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialData={\r\n    list:[]\r\n}\r\nconst toDoReducer=(state=initialData,action)=>{\r\n\r\n    switch(action.type){\r\n        case \"ADD-ITEM\":\r\n            const {id, data}= action.payload;\r\n            return{\r\n                ...state,\r\n                list:[\r\n                    ...state.list,\r\n                    {\r\n                        id:id,\r\n                        data:data\r\n\r\n                    }\r\n                ]\r\n            }\r\n            case \"DELETE-ITEM\":\r\n                const newList= state.list.filter((ele)=> ele.id !== action.id)\r\n                return{\r\n                    ...state,\r\n                    list: newList\r\n                }\r\n        default: return state;\r\n    }\r\n}\r\nexport default toDoReducer;","import toDoReducer from \"./toDoReducer\";\r\nimport {combineReducers}  from \"redux\";\r\n\r\nconst rootReducer= combineReducers({\r\n    toDoReducer\r\n})\r\n\r\nexport default rootReducer;","import {createStore} from \"redux\";\r\n\r\nimport rootReducer from \"./reducer/index\"\r\n\r\nconst store= createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}